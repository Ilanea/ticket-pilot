version: '2.1'
orbs:
  gcp-gcr: circleci/gcp-gcr@0.15.1
  cloudrun: circleci/gcp-cloud-run@1.0.2
general:
  branches:
    only:
      - develop
jobs:
  build-and-test:
    docker:
      - image: maven:3.8.1-openjdk-17-slim
    environment:
      MAVEN_CLI_OPTS: "--batch-mode"
    steps:
      - checkout
      - run:
          name: Add Vaadin Server License
          command: |
            mkdir ~/.vaadin
            echo ${VAADIN_LICENSE} > ~/.vaadin/offlineKey
      - run: mvn $MAVEN_CLI_OPTS clean package -Pproduction -e
      - run: mvn test -e

  build-and-push:
    executor: gcp-gcr/default
    steps:
      - checkout
      - run:
          name: Create ticketpilot.properties
          command: |
            echo "logging.level.org.atmosphere = warn" > $CIRCLE_WORKING_DIRECTORY/src/main/resources/ticketpilot.properties;
            echo "spring.datasource.url=jdbc:postgresql:///$DATABASE_NAME?cloudSqlInstance=$POSTGRESQL_INSTANCE_CONNECTION_NAME&socketFactory=com.google.cloud.sql.postgres.SocketFactory&user=$POSTGRESQL_USER_NAME&password=$POSTGRESQL_USER_PASSWORD" >> $CIRCLE_WORKING_DIRECTORY/src/main/resources/ticketpilot.properties;
            echo "spring.jpa.properties.hibernate.default_schema=public" >> $CIRCLE_WORKING_DIRECTORY/src/main/resources/ticketpilot.properties;
            echo "spring.datasource.driver-class-name=org.postgresql.Driver" >> $CIRCLE_WORKING_DIRECTORY/src/main/resources/ticketpilot.properties;
            echo "spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect" >> $CIRCLE_WORKING_DIRECTORY/src/main/resources/ticketpilot.properties;
            echo "spring.jpa.defer-datasource-initialization=true" >> $CIRCLE_WORKING_DIRECTORY/src/main/resources/ticketpilot.properties;
            echo "#spring.jpa.hibernate.ddl-auto=create" >> $CIRCLE_WORKING_DIRECTORY/src/main/resources/ticketpilot.properties;
            echo "#spring.sql.init.mode=always" >> $CIRCLE_WORKING_DIRECTORY/src/main/resources/ticketpilot.properties;
            echo "sendgrid.api.key=$SENDGRID_API_KEY" >> $CIRCLE_WORKING_DIRECTORY/src/main/resources/ticketpilot.properties;
            echo "sendgrid.sender.email=$SENDGRID_SENDER" >> $CIRCLE_WORKING_DIRECTORY/src/main/resources/ticketpilot.properties;
      - gcp-gcr/gcr-auth
      - gcp-gcr/build-image:
          image: ticket-pilot
          extra_build_args: VAADIN_OFFLINE_KEY=${VAADIN_LICENSE}
          no_output_timeout: 20m
          registry-url: eu.gcr.io
      - gcp-gcr/push-image:
          digest-path: /tmp/digest.txt
          image: ticket-pilot
          tag: latest
          registry-url: eu.gcr.io
      - run:
          command: |
            echo "Digest is: $(</tmp/digest.txt)"

  update-service:
    docker:
      - image: cimg/base:stable
    steps:
      - cloudrun/init
      - cloudrun/deploy:
          image: eu.gcr.io/${GOOGLE_PROJECT_ID}/ticket-pilot:latest
          platform: managed
          region: europe-west1
          service-name: ticket-pilot
          unauthenticated: true

workflows:
  build-test-develop:
    jobs:
      - build-and-test
      - build-and-push:
          filters:
            branches:
              only:
                - develop
          requires:
            - build-and-test
      - update-service:
          filters:
            branches:
              only:
                - develop
          requires:
            - build-and-push