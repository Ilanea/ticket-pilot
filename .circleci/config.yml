version: '2.1'
orbs:
  gcp-gcr: circleci/gcp-gcr@0.15.1
jobs:

  build-and-test:
    docker:
      - image: maven:3.8.1-openjdk-17-slim
    environment:
      MAVEN_CLI_OPTS: "--batch-mode"
    steps:
      - checkout
      - run: mvn $MAVEN_CLI_OPTS clean package -Pproduction -e
      - run: mvn test -e

  build-and-push:
    executor: gcp-gcr/default
    steps:
      - checkout
      - run:
          name: Create ticketpilot.properties
          command: |
            echo 'export $DB_URL=${DB_URL}' >> $BASH_ENV; source $BASH_ENV;
            echo 'export $DB_USERNAME=${$DB_USERNAME}' >> $BASH_ENV; source $BASH_ENV;
            echo 'export $DB_PASSWORD=${$DB_PASSWORD}' >> $BASH_ENV; source $BASH_ENV;
            echo 'export $SENDGRID_API_KEY=${$SENDGRID_API_KEY}' >> $BASH_ENV; source $BASH_ENV;
            echo 'export $SENDGRID_SENDER=${$SENDGRID_SENDER}' >> $BASH_ENV; source $BASH_ENV;
            echo 'export $CIRCLE_WORKING_DIRECTORY=${$CIRCLE_WORKING_DIRECTORY}' >> $BASH_ENV; source $BASH_ENV;
            echo "logging.level.org.atmosphere = warn" > $CIRCLE_WORKING_DIRECTORY/src/main/resources/ticketpilot.properties;
            echo "spring.datasource.url=jdbc:postgresql://$DB_URL:5432/ticketpilot" >> $CIRCLE_WORKING_DIRECTORY/src/main/resources/ticketpilot.properties;
            echo "spring.datasource.username=$DB_USERNAME" >> $CIRCLE_WORKING_DIRECTORY/src/main/resources/ticketpilot.properties;
            echo "spring.datasource.password=$DB_PASSWORD" >> $CIRCLE_WORKING_DIRECTORY/src/main/resources/ticketpilot.properties;
            echo "spring.jpa.properties.hibernate.default_schema=public" >> $CIRCLE_WORKING_DIRECTORY/src/main/resources/ticketpilot.properties;
            echo "spring.datasource.driver-class-name=org.postgresql.Driver" >> $CIRCLE_WORKING_DIRECTORY/src/main/resources/ticketpilot.properties;
            echo "spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect" >> $CIRCLE_WORKING_DIRECTORY/src/main/resources/ticketpilot.properties;
            echo "spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=create.sql" >> $CIRCLE_WORKING_DIRECTORY/src/main/resources/ticketpilot.properties;
            echo "spring.jpa.defer-datasource-initialization=true" >> $CIRCLE_WORKING_DIRECTORY/src/main/resources/ticketpilot.properties;
            echo "spring.jpa.hibernate.ddl-auto=create" >> $CIRCLE_WORKING_DIRECTORY/src/main/resources/ticketpilot.properties;
            echo "spring.sql.init.mode=always" >> $CIRCLE_WORKING_DIRECTORY/src/main/resources/ticketpilot.properties;
            echo "sendgrid.api.key=$SENDGRID_API_KEY" >> $CIRCLE_WORKING_DIRECTORY/src/main/resources/ticketpilot.properties;
            echo "sendgrid.sender.email=$SENDGRID_SENDER" >> $CIRCLE_WORKING_DIRECTORY/src/main/resources/ticketpilot.properties;
      - gcp-gcr/gcr-auth
      - gcp-gcr/build-image:
          image: ticket-pilot
          no_output_timeout: 20m
          registry-url: eu.gcr.io
      - gcp-gcr/push-image:
          digest-path: /tmp/digest.txt
          image: ticket-pilot
          registry-url: eu.gcr.io
      - run:
          command: |
            echo "Digest is: $(</tmp/digest.txt)"

workflows:
  commit:
    jobs:
      - build-and-test
      - build-and-push:
          requires:
            - build-and-test