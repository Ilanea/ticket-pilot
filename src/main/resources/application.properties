server.port=${PORT:8080}
logging.level.org.atmosphere = warn
spring.mustache.check-template-location = false

# Launch the default browser when starting the application in development mode
vaadin.launch-browser=true
# To improve the performance during development.
# For more information https://vaadin.com/docs/flow/spring/tutorial-spring-configuration.html#special-configuration-parameters
vaadin.whitelisted-packages = com.vaadin,org.vaadin,dev.hilla,com.mci.ticketpilot

# H2 Configuration
spring.jpa.database=h2
spring.datasource.url=jdbc:h2:mem:ticketpilot
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.defer-datasource-initialization = true

spring.h2.console.path=/h2-console
spring.h2.console.settings.trace=false
spring.h2.console.settings.web-allow-others=false


## Setup Postgresql Test Environment
# Download Docker https://www.docker.com/products/docker-desktop/
# Download Postgres Docker Image https://hub.docker.com/_/postgres (From Search Bar in Docker Desktop) (use Version 13)
# Start the Container with the following Parameters:
#                                               Host Port 5432
#                                               Env Variable POSTGRES_PASSWORD set
# Connect to DB and create a database and user:
#                                               CREATE DATABASE ticketpilot;
#                                               CREATE USER ticketpilot WITH ENCRYPTED PASSWORD 'password';
#                                               GRANT CONNECT ON DATABASE ticketpilot TO ticketpilot;
# Uncomment the following lines and comment out the H2 lines above

# Postgres configuration
#spring.datasource.url=jdbc:postgresql://localhost:5432/ticketpilot
#spring.jpa.properties.hibernate.default_schema=public
#spring.datasource.username=ticketpilot
#spring.datasource.password=password
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=create.sql
#spring.jpa.defer-datasource-initialization=true

# Postgres Data Loading (Only once on new database!)
#spring.jpa.hibernate.ddl-auto=create
#spring.sql.init.mode=always

# Postgres Debugging (Optional)
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true


# COPY THIS FILE AND RENAME IT TO ticketpilot.properties
# DO NOT COMMIT YOUR CHANGES TO THIS FILE AND DO NOT REMOVE THIS FILE
sendgrid.api.key=YOUR_SENDGRID_API_KEY
sendgrid.sender.email=YOUR_SENDGRID_SENDER_EMAIL